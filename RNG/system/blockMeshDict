/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
//    
//             __
//      ______|  |
//    d|         |D
//     |______   |
//        b   |__|
//             s
//    
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


 


meshGenApp blockMesh;
convertToMeters 0.001; //it means that you have type all measures in "mm"

//=======================user defined datas==================================//
			// feeding diameter
			// diameter ratio (D/d)
			// dimensionless gap between reed and seat (sa=s/d)
		        // feeding tube length
			// angle between front/backface and plane x-y
				// Refinement level


//Number of Grids (G) and Expation Ratios (ER) 














//===========================================================================//

//=====================datas manipulation====================================//



 
  





   









//==========================================================================//

  vertices
   (

	(0  0  0) //00
	(0.52227585  0  0) //01
	(1.0445517  0  0) //02
	(35.8745517  0  0) //03

	(0  17.4043912525618  -0.607774734379853) //04
	(0.52227585  17.4043912525618  -0.607774734379853) //05
	(1.0445517  17.4043912525618  -0.607774734379853) //06
	(35.8745517  17.4043912525618  -0.607774734379853) //07

	(0  21.7554890657022  -0.759718417974816) //08
	(0.52227585  21.7554890657022  -0.759718417974816) //09
	(1.0445517  21.7554890657022  -0.759718417974816) //10

	(0  26.1065868788427  -0.911662101569779) //11
	(0.52227585  26.1065868788427  -0.911662101569779) //12
	(1.0445517  26.1065868788427  -0.911662101569779) //13


	(0  17.4043912525618  0.607774734379853) //14
	(0.52227585  17.4043912525618  0.607774734379853) //15
	(1.0445517  17.4043912525618  0.607774734379853) //16
	(35.8745517  17.4043912525618  0.607774734379853) //17

	(0  21.7554890657022  0.759718417974816) //18
	(0.52227585  21.7554890657022  0.759718417974816) //19
	(1.0445517  21.7554890657022  0.759718417974816) //20

	(0  26.1065868788427  0.911662101569779) //21
	(0.52227585  26.1065868788427  0.911662101569779) //22
	(1.0445517  26.1065868788427  0.911662101569779) //23



   );
				
   blocks
   (

    // blocks with 6 vertices

	hex (2 3 7 6 2 3 17 16) (100 110 1) simpleGrading (220 0.0120192307692308 1) //0
	hex (1 2 6 5 1 2 16 15) (45 110 1) simpleGrading (0.542888165038002 0.0120192307692308 1) //1
	hex (0 1 5 4 0 1 15 14) (45 110 1) simpleGrading (1.842 0.0120192307692308 1) //2

    //blocks with 8 vertice

	hex (5 6 10 9 15 16 20 19) (45 90 1) simpleGrading (0.542888165038002 17.25 1) //3
	hex (4 5 9 8 14 15 19 18) (45 90 1) simpleGrading (1.842 17.25 1) //4
	hex (9 10 13 12 19 20 23 22) (45 90 1) simpleGrading (0.542888165038002 0.0579710144927536 1) //5
	hex (8 9 12 11 18 19 22 21) (45 90 1) simpleGrading (1.842 0.0579710144927536 1) //6
   );

   edges
   (
 
   );

   boundary             
    (
 	inlet              
        {
            type inlet;    
            faces
            (
                (3 3 7 17) 
		
            );
        }                  

        outlet             
        {
            type outlet;    
            faces
            (
               (13 12 22 23)
               (12 11 21 22)

            );
        }


       reed-wall
       {
            type wall;
            faces
            (

               (0 0 14 4)
               (4 14 18 8)
               (8 18 21 11)

            );
        }

       walls
       {
            type wall;
            faces
            (

		(7 6 16 17)
	        (6 10 20 16)
	        (10 13 23 20)

            );
        }

       frontWedge
       {
            type wedge;
            faces
            (

		(3 2 6 7)
	        (2 1 5 6)
	        (1 0 4 5)
	        (6 5 9 10)
	        (5 4 8 9)
	        (10 9 12 13)
	        (9 8 11 12)

            );
        }

       backWedge
       {
            type wedge;
            faces
            (
		(2 3 17 16)
	        (1 2 16 15)
	        (0 1 15 14)
	        (15 16 20 19)
	        (14 15 19 18)
	        (19 20 23 22)
	        (18 19 22 21)

            );
        }


    ); 

   mergePatchPairs
   (
   );



// ************************************************************************* //
